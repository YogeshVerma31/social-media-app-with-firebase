// Generated by view binder compiler. Do not edit!
package com.tennine.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tennine.app.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TabFlowingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnRemoveFollowing;

  @NonNull
  public final EditText edtSearchFollowing;

  @NonNull
  public final CircleImageView ivProfile;

  @NonNull
  public final TextView tvNickNameFollowing;

  @NonNull
  public final TextView tvUsername;

  private TabFlowingBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnRemoveFollowing,
      @NonNull EditText edtSearchFollowing, @NonNull CircleImageView ivProfile,
      @NonNull TextView tvNickNameFollowing, @NonNull TextView tvUsername) {
    this.rootView = rootView;
    this.btnRemoveFollowing = btnRemoveFollowing;
    this.edtSearchFollowing = edtSearchFollowing;
    this.ivProfile = ivProfile;
    this.tvNickNameFollowing = tvNickNameFollowing;
    this.tvUsername = tvUsername;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TabFlowingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TabFlowingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tab_flowing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TabFlowingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRemoveFollowing;
      Button btnRemoveFollowing = ViewBindings.findChildViewById(rootView, id);
      if (btnRemoveFollowing == null) {
        break missingId;
      }

      id = R.id.edtSearchFollowing;
      EditText edtSearchFollowing = ViewBindings.findChildViewById(rootView, id);
      if (edtSearchFollowing == null) {
        break missingId;
      }

      id = R.id.ivProfile;
      CircleImageView ivProfile = ViewBindings.findChildViewById(rootView, id);
      if (ivProfile == null) {
        break missingId;
      }

      id = R.id.tvNickNameFollowing;
      TextView tvNickNameFollowing = ViewBindings.findChildViewById(rootView, id);
      if (tvNickNameFollowing == null) {
        break missingId;
      }

      id = R.id.tvUsername;
      TextView tvUsername = ViewBindings.findChildViewById(rootView, id);
      if (tvUsername == null) {
        break missingId;
      }

      return new TabFlowingBinding((ConstraintLayout) rootView, btnRemoveFollowing,
          edtSearchFollowing, ivProfile, tvNickNameFollowing, tvUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
