// Generated by view binder compiler. Do not edit!
package com.tennine.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tennine.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNotificationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatImageView ivBack;

  @NonNull
  public final ProgressBar pbNotification;

  @NonNull
  public final RecyclerView rvNotification;

  @NonNull
  public final TextView tvNoNotification;

  private ActivityNotificationBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatImageView ivBack, @NonNull ProgressBar pbNotification,
      @NonNull RecyclerView rvNotification, @NonNull TextView tvNoNotification) {
    this.rootView = rootView;
    this.ivBack = ivBack;
    this.pbNotification = pbNotification;
    this.rvNotification = rvNotification;
    this.tvNoNotification = tvNoNotification;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNotificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNotificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivBack;
      AppCompatImageView ivBack = ViewBindings.findChildViewById(rootView, id);
      if (ivBack == null) {
        break missingId;
      }

      id = R.id.pbNotification;
      ProgressBar pbNotification = ViewBindings.findChildViewById(rootView, id);
      if (pbNotification == null) {
        break missingId;
      }

      id = R.id.rvNotification;
      RecyclerView rvNotification = ViewBindings.findChildViewById(rootView, id);
      if (rvNotification == null) {
        break missingId;
      }

      id = R.id.tvNoNotification;
      TextView tvNoNotification = ViewBindings.findChildViewById(rootView, id);
      if (tvNoNotification == null) {
        break missingId;
      }

      return new ActivityNotificationBinding((ConstraintLayout) rootView, ivBack, pbNotification,
          rvNotification, tvNoNotification);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
