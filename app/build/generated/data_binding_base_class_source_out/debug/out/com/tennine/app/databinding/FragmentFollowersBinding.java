// Generated by view binder compiler. Do not edit!
package com.tennine.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tennine.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentFollowersBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText edtSearchFollowers;

  @NonNull
  public final ProgressBar pbFollowers;

  @NonNull
  public final RecyclerView rvFollowers;

  @NonNull
  public final TextView tvNoData;

  private FragmentFollowersBinding(@NonNull ConstraintLayout rootView,
      @NonNull EditText edtSearchFollowers, @NonNull ProgressBar pbFollowers,
      @NonNull RecyclerView rvFollowers, @NonNull TextView tvNoData) {
    this.rootView = rootView;
    this.edtSearchFollowers = edtSearchFollowers;
    this.pbFollowers = pbFollowers;
    this.rvFollowers = rvFollowers;
    this.tvNoData = tvNoData;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFollowersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFollowersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_followers, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFollowersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edtSearchFollowers;
      EditText edtSearchFollowers = ViewBindings.findChildViewById(rootView, id);
      if (edtSearchFollowers == null) {
        break missingId;
      }

      id = R.id.pbFollowers;
      ProgressBar pbFollowers = ViewBindings.findChildViewById(rootView, id);
      if (pbFollowers == null) {
        break missingId;
      }

      id = R.id.rvFollowers;
      RecyclerView rvFollowers = ViewBindings.findChildViewById(rootView, id);
      if (rvFollowers == null) {
        break missingId;
      }

      id = R.id.tv_no_data;
      TextView tvNoData = ViewBindings.findChildViewById(rootView, id);
      if (tvNoData == null) {
        break missingId;
      }

      return new FragmentFollowersBinding((ConstraintLayout) rootView, edtSearchFollowers,
          pbFollowers, rvFollowers, tvNoData);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
