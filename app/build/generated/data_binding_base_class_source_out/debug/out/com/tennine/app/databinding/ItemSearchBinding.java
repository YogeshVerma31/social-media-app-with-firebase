// Generated by view binder compiler. Do not edit!
package com.tennine.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.tennine.app.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button button9;

  @NonNull
  public final EditText editTextTextPersonName7;

  @NonNull
  public final CircleImageView profileImage668;

  @NonNull
  public final TextView textView62;

  private ItemSearchBinding(@NonNull ConstraintLayout rootView, @NonNull Button button9,
      @NonNull EditText editTextTextPersonName7, @NonNull CircleImageView profileImage668,
      @NonNull TextView textView62) {
    this.rootView = rootView;
    this.button9 = button9;
    this.editTextTextPersonName7 = editTextTextPersonName7;
    this.profileImage668 = profileImage668;
    this.textView62 = textView62;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button9;
      Button button9 = ViewBindings.findChildViewById(rootView, id);
      if (button9 == null) {
        break missingId;
      }

      id = R.id.editTextTextPersonName7;
      EditText editTextTextPersonName7 = ViewBindings.findChildViewById(rootView, id);
      if (editTextTextPersonName7 == null) {
        break missingId;
      }

      id = R.id.profile_image668;
      CircleImageView profileImage668 = ViewBindings.findChildViewById(rootView, id);
      if (profileImage668 == null) {
        break missingId;
      }

      id = R.id.textView62;
      TextView textView62 = ViewBindings.findChildViewById(rootView, id);
      if (textView62 == null) {
        break missingId;
      }

      return new ItemSearchBinding((ConstraintLayout) rootView, button9, editTextTextPersonName7,
          profileImage668, textView62);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
